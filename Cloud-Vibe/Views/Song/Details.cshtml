@using Cloud_Vibe.Utilities
@using Cloud_Vibe.Models.ViewModels
@model SongDetailsViewModel
@{
    ViewBag.Title = "Details";
}

<div class="container jumbotron">
    <div class="row">
        <!--Info Container-->

        <div class="col-md-4">
            <!--Image Container-->
            @{
                var albumImg = Model.CoverArt;
                var imgSrc = FilesByteUtility.ByteArrayToImageSrcString(albumImg);
            }
            <img src="@imgSrc" style="float:left;height:260px; margin-right:10px" class="img-rounded img-responsive" />
        </div>

        <div class="col-md-8">
            <!--Info Container-->
            <div class="row">
                <div class="col-md-8 pull-left">
                    <!--Main Info Container-->
                    <p>
                        @Model.Title <br />
                        <strong>@Model.Artist.Name</strong>
                    </p>
                    <p>
                        Uploaded <strong>@Html.Timeago(Model.SharedOn)</strong> <br />
                        By: <strong>@Html.ActionLink(@Model.UserShared.UserName, "ProfileDetails", "Account", new { username = @Model.UserShared.UserName }, null) </strong> <br />

                        <a href="@Url.Action("DownloadFile","User", new { id = Model.ID, name= Model.Title+"-"+Model.Artist.Name , item = "song"})" class="btn btn-lg btn-block btn-warning" id="btn-download">Download</a>
                    </p>
                </div>

                <div class="col-md-4 pull-right">
                    <!--Statistic Info Container-->
                    <p>
                        <strong>Viewed: </strong> @Model.Views
                    </p>
                    <p>
                        <strong>Downloaded: </strong> @Model.Downloads
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

@if (Model.VideoLink != null)
{
    <div class="jumbotron">
        <!--Video Container-->
    </div>
}

@{var moreSongs = ViewBag.MoreSongs as List<SongDetailsViewModel>;  }
@if (moreSongs.Count != 0)
{
    <div class="jumbotron col-md-12">
        <div class="row">
            <h4> SONGS FROM "@Model.Artist.Name.ToUpper()"</h4>
        </div>
        <div class="row">

            @foreach (var song in moreSongs)
            {
                <div class="col-md-2">
                    <div class="row">
                        <!--Image Container-->
                        @{
                var cover = song.CoverArt;
                    var img = FilesByteUtility.ByteArrayToImageSrcString(cover);
                        }
                        <img src="@img" style="float:left;height:150px; margin-right:10px" class="img-rounded img-responsive" />
                    </div>
                    <div class="row">
                        <a href="@Url.Action("Details", "Song", new { title = song.Title })">
                            @if (song.Title.Count() < 30)
                                {
                            <p>@song.Title</p>
                                }
                                else
                                {
                            <p>@song.Title.Substring(0, 30) ...</p>
                                }
                        </a>
                    </div>
                </div>
            }

        </div>
        <hr />

        <div class="row row-centered">
            @using (Html.BeginForm("AllSongs", "Song", FormMethod.Get))
            {
                <div class="input-group input-group-lg col-md-12">
                    @Html.Hidden("SearchString", Model.Artist.Name)
                    <button class="btn btn-lg btn-block btn-warning" type="submit">See more song from "@Model.Artist.Name"</button>
                </div>
            }
        </div>
    </div>
}

@{ViewBag.id = Model.ID;}
@{ViewBag.Type = "song";}

@Html.Partial("_Comments", ViewBag.CommentsInfo as List<CommentViewModel>)

@section Scripts {
    <script>
        var songType = 'song';
        var songId = @Model.ID;

        $(document).ready(function () {
            loadComments("#container-comments");
        });

        $('#btn-add-comment').click(function () {
            addComment();
        })		

        var addComment = function addComment() {
            var userComment = $('#text-comments').val();
            $.ajax({
                type: "POST",
                url: "@Url.Action("Comments", "User")",
                data: { type : songType, id : songId, comment: userComment},
            })
            .success(function () {
                $('#text-comments').val('');
                loadComments("#container-comments");
            })
            .error(function(status){
                console.log(status);
            })
        }

        var removeComment = function removeComment() {




            var userComment = $('#text-comments').val();
            $.ajax({
                type: "POST",
                url: "@Url.Action("Comments", "User")",
                data: { type : songType, id : songId, comment: userComment},
            })
            .success(function () {
                $('#text-comments').val('');
                loadComments("#container-comments");
            })
            .error(function(status){
                console.log(status);
            })
        }

        var loadComments = function loadComments(container) {
            $.ajax({
                url: "@Url.Action("Comments","User")",
                contentType: 'application/html; charset=utf-8',
                type: 'GET',
                data: { type : songType, id : songId},
                dataType: 'html',
                beforeSend: function(){
                    $('#loader').show();
                },
                complete: function(){
                    $('#loader').hide();
                }
            })
            .success(function (result) {
                $(container).hide();
                $(container).html(result);
                $(container).show("slow");
            })
            .error(function(status){
                console.log(status);
            })
        }
    </script>
}
