@model Cloud_Vibe.Models.ExternalLoginConfirmationViewModel
@{
    ViewBag.Title = "Sign Up Confirmation";
}

<div class="row" style="color:ghostwhite">
    <div id="title-index" class="row-centered">
        <h4>Cloud <span class="fui-spotify"></span> Vibe</h4>
        <br />
    </div>

    <div id="logging-container" class="row-centered" style="display:none">
        <div class="col-centered col-md-6 container-transparent">
            <div class="row">
                <h4><em>@ViewBag.Title</em></h4>
            </div>
            <br />
            @using (Html.BeginForm("ExternalLoginConfirmation", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <p class="text-info">
                    You've successfully authenticated with <strong>@ViewBag.LoginProvider</strong>.
                    Please enter additional information for our site below and click the Sign Up button to finish
                    logging in.
                </p>
                <hr />
                <div class="form-group">
                    @Html.LabelFor(m => m.UserName, new { @class = "col-md-3 control-label" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-3 control-label" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.FirstName, new { @class = "col-md-3 control-label" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.LastName, new { @class = "col-md-3 control-label" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <input type="submit" class="btn btn-hg btn-info" value="Sign Up" />
                </div>
            }
            <div>
                <p><em>Changed your mind? <a href="@Url.Action("Index","Home")">Go back</a></em></p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*Referenced Intellisense for this view(this is a work around which fix the problem with the intellisense in Razor)*@
    @if (false)
    {
        <script src="~/Scripts/jquery-2.1.0-vsdoc.js"></script>
    }

    <script>
        $('body').css("background", "url(../../Content/images/album-wallpaper1.jpg) no-repeat center center");
        $('body').css("background-size", "cover");
        $('document').ready(function () {
            $("#logging-container").show("slow");
        })
    </script>
}
