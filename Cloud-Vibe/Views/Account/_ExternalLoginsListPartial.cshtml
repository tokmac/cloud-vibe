@model Cloud_Vibe.Models.ExternalLoginListViewModel
@using Microsoft.Owin.Security

@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0)
    {
        <div>
            <p>
                There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=313242">this article</a>
                for details on setting up this ASP.NET application to support logging in via external services.
            </p>
        </div>
    }
    else
    {
        using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl }))
        {
            @Html.AntiForgeryToken()
            <div id="socialLoginList">
                @{
            var lastProvider = loginProviders.Last();
                }
                @foreach (AuthenticationDescription p in loginProviders)
                {
                    <div class="form-group">
                        @if (p.AuthenticationType == "Facebook")
                        {
                            <button class="btn btn-block btn-social btn-lg btn-facebook" type="submit" onclick="loadExternalConfirmationContainer()" name="provider" id="@p.AuthenticationType" value="@p.AuthenticationType">
                                <i class="fa fa-facebook"></i> <span>Sign in with Facebook</span>
                            </button>
                        }
                        else if (p.AuthenticationType == "Google")
                        {
                            <button class="btn btn-block btn-social btn-lg btn-google-plus" type="submit" onclick="loadExternalConfirmationContainer()" name="provider" id="@p.AuthenticationType" value="@p.AuthenticationType">
                                <i class="fa fa-google-plus"></i> <span>Sign in with Google+</span>
                            </button>
                        }
                    </div>
                }
            </div>
        }
    }
}
