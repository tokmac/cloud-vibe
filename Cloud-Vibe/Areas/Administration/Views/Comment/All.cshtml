@using Cloud_Vibe.Areas.Administration.ViewModels.Comment
@{
    const string ControllerName = "Comment";
}

<div class="container">
    <div class="row row-centered">
        <div class="col-centered">
            <ul class="nav nav-pills">
                <li>@Html.ActionLink("Albums", "All", "Album")</li>
                <li>@Html.ActionLink("Songs", "All", "Song")</li>
                <li class="active">@Html.ActionLink("Comments", "All", "Comment")</li>
            </ul>
        </div>
    </div>
</div>

@(Html.Kendo()
        .Grid<CommentViewModel>()
        .Name("grid")
        .Columns(columns =>
        {
            columns.Bound(pr => pr.ID);
            columns.Bound(pr => pr.SongName).Width(250);
            columns.Bound(pr => pr.AlbumName);
            columns.Bound(pr => pr.Text);
            columns.Bound(pr => pr.SharedOn).ClientTemplate("#=kendo.toString(SharedOn, 'dd/MM/yyyy HH:mm:ss')#");
            columns.Bound(pr => pr.UserShared);
            columns.Command(cmd => { cmd.Edit(); cmd.Destroy(); });
        })
        .DataSource(data => data
                .Ajax()
                .Model(m =>
                {
                    m.Id(p => p.ID);
                    m.Field(p => p.UserShared).DefaultValue(User.Identity.Name).Editable(false);
                })
                .Events(events => events.Error("onError"))
                .Read(read => read.Action("Read", ControllerName))
            //.Create(create => create.Action("Create", ControllerName))
                .Update(update => update.Action("Update", ControllerName))
                .Destroy(destroy => destroy.Action("Destroy", ControllerName))
        )
        .Pageable(pager => pager.Refresh(true))
        .Sortable()
        .Filterable()
        .Groupable()
        .Selectable()
        //.ToolBar(toolbar => { toolbar.Create(); })
        .Editable(edit => edit.Mode(GridEditMode.PopUp))

)

<script>


    function onError(e, status) {
        alert("A server error has occurred!");
    }

</script>


